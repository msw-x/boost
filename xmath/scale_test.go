package xmath

import (
	"testing"
)

func TestScale(t *testing.T) {
	t0 := func(v float64, e int) {
		r := Scale(v)
		if r != e {
			t.Errorf("Scale(%v) = %d; expected: %d", v, r, e)
		}
	}
	t1 := func(v float64, e int) {
		t0(v, e)
		t0(-v, e)
	}

	t1(999999999999999, 15)
	t1(99999999999999, 14)
	t1(9999999999999, 13)
	t1(999999999999, 12)
	t1(100000000005, 12)
	t1(100000000004, 12)
	t1(100000000003, 12)
	t1(100000000002, 12)
	t1(100000000001, 12)
	t1(100000000000, 12)
	t1(99999999999, 11)
	t1(99999999998, 11)
	t1(99999999997, 11)
	t1(99999999996, 11)
	t1(99999999995, 11)
	t1(9999999999, 10)
	t1(999999999, 9)
	t1(99999999, 8)
	t1(9999999, 7)
	t1(999999, 6)
	t1(99999, 5)
	t1(9999, 4)
	t1(999, 3)
	t1(99, 2)
	t1(11, 2)
	t1(10, 2)
	t1(9, 1)

	t1(999999999999997, 15)
	t1(999999999999999, 15)
	t1(1000000000000000, 15) //
	t1(1000000000000001, 15) //
	t1(1000000000000002, 15) //
	t1(1000000000000003, 16)
	t1(9999999999999998, 16)
	t1(9999999999999999, 17) //

	t1(1000000000000003, 16)
	t1(1000000000000000, 15) //
	t1(100000000000000, 15)
	t1(10000000000000, 14)
	t1(1000000000000, 13)
	t1(100000000000, 12)
	t1(10000000000, 11)
	t1(1000000000, 10)
	t1(100000000, 9)
	t1(10000000, 8)
	t1(1000000, 7)
	t1(100000, 6)
	t1(10000, 5)
	t1(1000, 4)
	t1(100, 3)
	t1(10, 2)
	t1(0, 1)
	t1(1, 1)
	t1(0.1, -1)
	t1(0.01, -2)
	t1(0.001, -3)
	t1(0.0001, -4)
	t1(0.00001, -5)
	t1(0.000001, -6)
	t1(0.0000001, -7)
	t1(0.00000001, -8)
	t1(0.000000001, -9)
	t1(0.0000000001, -10)
	t1(0.00000000001, -11)
	t1(0.000000000001, -12)
	t1(0.0000000000001, -13)
	t1(0.00000000000001, -14)
	t1(0.000000000000001, -15)
	t1(0.0000000000000001, -16)

	t1(0.008, -3)
	t1(0.009, -3)
	t1(0.01, -2)
	t1(0.011, -2)
	t1(0.02, -2)
	t1(0.03, -2)
	t1(0.04, -2)
	t1(0.09, -2)
}
